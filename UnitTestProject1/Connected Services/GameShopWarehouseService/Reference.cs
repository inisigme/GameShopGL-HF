//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFGameShopWarehouseServiceTest.GameShopWarehouseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/EFGameShopDatabase.Models")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LoyalityPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableQuantity {
            get {
                return this.AvailableQuantityField;
            }
            set {
                if ((this.AvailableQuantityField.Equals(value) != true)) {
                    this.AvailableQuantityField = value;
                    this.RaisePropertyChanged("AvailableQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LoyalityPoints {
            get {
                return this.LoyalityPointsField;
            }
            set {
                if ((this.LoyalityPointsField.Equals(value) != true)) {
                    this.LoyalityPointsField = value;
                    this.RaisePropertyChanged("LoyalityPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxRate {
            get {
                return this.TaxRateField;
            }
            set {
                if ((this.TaxRateField.Equals(value) != true)) {
                    this.TaxRateField = value;
                    this.RaisePropertyChanged("TaxRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemType", Namespace="http://schemas.datacontract.org/2004/07/EFGameShopDatabase.Enums")]
    public enum ItemType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GameBox = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GameDigital = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Console = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accessory = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameShopWarehouseService.IGameShopWarehouse")]
    public interface IGameShopWarehouse {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetAllItems", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetAllItemsResponse")]
        WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetAllItems", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetAllItemsResponse")]
        System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemsByType", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemsByTypeResponse")]
        WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetItemsByType(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.ItemType itemtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemsByType", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemsByTypeResponse")]
        System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetItemsByTypeAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.ItemType itemtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemsWithNoQty", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemsWithNoQtyResponse")]
        WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetItemsWithNoQty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemsWithNoQty", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemsWithNoQtyResponse")]
        System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetItemsWithNoQtyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/InsertNewItem", ReplyAction="http://tempuri.org/IGameShopWarehouse/InsertNewItemResponse")]
        bool InsertNewItem(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/InsertNewItem", ReplyAction="http://tempuri.org/IGameShopWarehouse/InsertNewItemResponse")]
        System.Threading.Tasks.Task<bool> InsertNewItemAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemById", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemByIdResponse")]
        WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item GetItemById(int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/GetItemById", ReplyAction="http://tempuri.org/IGameShopWarehouse/GetItemByIdResponse")]
        System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item> GetItemByIdAsync(int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/RemoveItem", ReplyAction="http://tempuri.org/IGameShopWarehouse/RemoveItemResponse")]
        bool RemoveItem(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameShopWarehouse/RemoveItem", ReplyAction="http://tempuri.org/IGameShopWarehouse/RemoveItemResponse")]
        System.Threading.Tasks.Task<bool> RemoveItemAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameShopWarehouseChannel : WCFGameShopWarehouseServiceTest.GameShopWarehouseService.IGameShopWarehouse, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameShopWarehouseClient : System.ServiceModel.ClientBase<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.IGameShopWarehouse>, WCFGameShopWarehouseServiceTest.GameShopWarehouseService.IGameShopWarehouse {
        
        public GameShopWarehouseClient() {
        }
        
        public GameShopWarehouseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameShopWarehouseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameShopWarehouseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameShopWarehouseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetAllItems() {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetAllItemsAsync() {
            return base.Channel.GetAllItemsAsync();
        }
        
        public WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetItemsByType(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.ItemType itemtype) {
            return base.Channel.GetItemsByType(itemtype);
        }
        
        public System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetItemsByTypeAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.ItemType itemtype) {
            return base.Channel.GetItemsByTypeAsync(itemtype);
        }
        
        public WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[] GetItemsWithNoQty() {
            return base.Channel.GetItemsWithNoQty();
        }
        
        public System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item[]> GetItemsWithNoQtyAsync() {
            return base.Channel.GetItemsWithNoQtyAsync();
        }
        
        public bool InsertNewItem(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item) {
            return base.Channel.InsertNewItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> InsertNewItemAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item) {
            return base.Channel.InsertNewItemAsync(item);
        }
        
        public WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item GetItemById(int itemid) {
            return base.Channel.GetItemById(itemid);
        }
        
        public System.Threading.Tasks.Task<WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item> GetItemByIdAsync(int itemid) {
            return base.Channel.GetItemByIdAsync(itemid);
        }
        
        public bool RemoveItem(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item) {
            return base.Channel.RemoveItem(item);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveItemAsync(WCFGameShopWarehouseServiceTest.GameShopWarehouseService.Item item) {
            return base.Channel.RemoveItemAsync(item);
        }
    }
}
